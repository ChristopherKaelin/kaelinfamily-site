---
import BlogPost from '../../layouts/BlogPost.astro';
import { sanityClient } from '../../../sanity.config.js';
import VideoEmbed from '../../components/VideoEmbed.astro';

export const prerender = true;
export async function getStaticPaths() {
	const posts: any[] = await sanityClient.fetch(`
    *[_type == "post"] {
      "slug": slug.current,
      title,
      publishedAt,
      body,
      "imageUrl": mainImage.asset->url + "?w=1200&h=630&fit=crop&auto=format",
      videoUrl,
      "seoTitle": seo.metaTitle,
      "seoDescription": seo.metaDescription,
      "seoImage": seo.ogImage.asset->url,
      excerpt,
      "categories": categories[]->{title, "slug": slug.current},
      "excerpt": array::join(string::split(pt::text(body), "")[0..150], "") + "...",
      "author": author->name,
      "readingTime": string(round(length(pt::text(body)) / 200)) + " min read"
    }
	`);
	
  return posts.map((post) => ({
      params: { 
        category: post.categories[0].slug,
        slug: post.slug 
      },
      props: post,
    }));
}

const post = Astro.props;
---

<BlogPost 
	title={post.seoTitle || post.title}
	description={post.seoDescription || post.excerpt || post.title}
	pubDate={new Date(post.publishedAt)}
	heroImage={post.seoImage || post.imageUrl}
	categories={post.categories}
	slug={post.slug}
	author={post.author}
	readingTime={post.readingTime}
>
	<div>
		{post.body && post.body.map((block: any) => {
			if (block._type === 'block') {
				return <p>{block.children?.map((child: any) => child.text).join('')}</p>
			}
		})}
		{post.videoUrl && <VideoEmbed url={post.videoUrl} />}

	</div>
</BlogPost>