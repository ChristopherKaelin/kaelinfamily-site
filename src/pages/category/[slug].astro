---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { sanityClient } from '../../../sanity.config.js';
import FormattedDate from '../../components/FormattedDate.astro';

export async function getStaticPaths() {
	const categories: any[] = await sanityClient.fetch(`
		*[_type == "category"] {
			title,
			"slug": slug.current
		}
	`);
	
	console.log('Categories from Sanity:', categories);
	
	return categories.map((category) => {
		console.log('Creating path for:', category.slug);
		return {
			params: { slug: category.slug },
			props: { 
				categoryTitle: category.title,
				categorySlug: category.slug 
			},
		};
	});
}

const { categoryTitle, categorySlug } = Astro.props;

const posts: any[] = await sanityClient.fetch(`
	*[_type == "post" && references(*[_type == "category" && slug.current == "${categorySlug}"]._id)] | order(publishedAt desc) {
		_id,
		title,
		slug,
		publishedAt,
		"imageUrl": mainImage.asset->url,
		"categories": categories[]->title
	}
`);
---

<BaseLayout title={`${categoryTitle} - ${SITE_TITLE}`} description={SITE_DESCRIPTION}>
	<section>
		<h1>Posts in: {categoryTitle}</h1>
		<div class="posts-grid">
			{
				posts.map((post) => (
					<article class="post-card">
						<a href={`/blog/${post.slug.current}/`}>
							{post.imageUrl && (
								<img width={200} height={120} src={post.imageUrl} alt="" class="post-image" />
							)}
							<div class="post-content">
								<h4 class="title">{post.title}</h4>
								<p class="date"><FormattedDate date={new Date(post.publishedAt)} /></p>
							</div>
						</a>
					</article>
				))
			}
		</div>
	</section>
</BaseLayout>

<style>
	.posts-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
		gap: 1.5rem;
		margin-top: 2rem;
	}

	.post-card {
		background: var(--color-bg, #fff);
		border: 1px solid var(--border-color, #e1e5e9);
		border-radius: 12px;
		padding: 1rem;
		box-shadow: 0 2px 8px rgba(0,0,0,0.1);
		transition: transform 0.2s ease, box-shadow 0.2s ease;
	}

	.post-card:hover {
		transform: translateY(-2px);
		box-shadow: 0 4px 12px rgba(0,0,0,0.15);
	}

	.post-card a {
		text-decoration: none;
		color: inherit;
		display: flex;
		align-items: flex-start;
		gap: 1rem;
	}

  .post-image {
    width: 150px;
    height: 100px;
    object-fit: contain;
    border-radius: 8px;
    flex-shrink: 0;
    background-color: #f8f9fa;
  }  
	.post-content {
		flex: 1;
		padding: 0;
	}

	.title {
		margin: 0 0 0.5rem 0;
		font-size: 1.2rem;
		color: var(--color-primary, #2c5aa0);
	}

	.date {
		margin: 0;
		color: var(--text-muted, #666);
		font-size: 0.9rem;
	}

	@media (max-width: 768px) {
		.posts-grid {
			grid-template-columns: 1fr;
		}
		
		.post-image {
			width: 120px;
			height: 80px;
		}
	}
</style>