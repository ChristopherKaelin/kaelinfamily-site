---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

export interface Props {
  src: ImageMetadata | string;
  alt: string;
  width?: number;
  height?: number;
  loading?: 'lazy' | 'eager';
  class?: string;
  sizes?: string;
}

const { 
  src, 
  alt, 
  width, 
  height, 
  loading = 'lazy',
  class: className = '',
  sizes = '(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw'
} = Astro.props;
---

{typeof src === 'string' ? (
  <img 
    src={src} 
    alt={alt} 
    width={width}
    height={height}
    loading={loading}
    class={className}
    decoding="async"
  />
) : (
  <Image 
    src={src} 
    alt={alt} 
    width={width || src.width}
    height={height || src.height}
    loading={loading}
    class={className}
    sizes={sizes}
    format="webp"
    quality={85}
    decoding="async"
  />
)}

<style>
  img {
    width: 100%;
    height: auto;
    border-radius: var(--border-radius-base);
  }

  /* Allow parent styles to override */
  img:where(.post-image) {
    width: 150px;
    height: 100px;
    object-fit: contain;
    border-radius: 8px;
    flex-shrink: 0;
    background-color: #f8f9fa;
  }  
</style>
