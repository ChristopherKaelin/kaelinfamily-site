---
// This is to test if CLAUDE is actually looking at the file I am attaching.

import familyCrest from '../assets/kaelin-coat-of-arms.png';
import { sanityClient } from '../../sanity.config.js';

// Get current path for active link highlighting
const currentPath = Astro.url.pathname;

// Fetch categories for dropdown
const categories: any[] = await sanityClient.fetch(`
  *[_type == "category" && !defined(parent)] | order(sortOrder asc) {
    title,
    "slug": slug.current,
    icon
  }
`);

---

<header>
  <nav class="nav">
    <div class="max-w-4xl mx-auto px-4 flex items-center justify-between h-16">
      <!-- Logo/Brand -->
      <div>
        <a href="/" class="flex items-center gap-3">
          <img src={familyCrest.src} alt="Kaelin Family Crest" class="family-crest" />
          <span class="nav-brand-link">
          The Kaelin Family
          </span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="flex items-center gap-6">
        <a href="/" class={`nav-link ${currentPath === '/' ? 'nav-link-active' : ''}`}>
          Home
        </a>
        <a href="/portfolio" class={`nav-link ${currentPath === '/portfolio' || currentPath.startsWith('/portfolio/') ? 'nav-link-active' : ''}`}>
          Portfolio
        </a>
        
        <!-- Categories Dropdown -->
        <div class="nav-dropdown">
          <a href="/categories" class={`nav-link ${currentPath === '/categories' || currentPath.startsWith('/category/') ? 'nav-link-active' : ''}`}>
            Categories
          </a>
          <div class="nav-dropdown-content">
            {categories.map((category) => (
              <a href={`/category/${category.slug}`} class="nav-dropdown-link">
                {category.title}
              </a>
            ))}
          </div>
        </div>
        
        <a href="/blog" class={`nav-link ${currentPath === '/blog' || currentPath.startsWith('/blog/') ? 'nav-link-active' : ''}`}>
          Blog
        </a>
        <a href="/about" class={`nav-link ${currentPath === '/about' ? 'nav-link-active' : ''}`}>
          About
        </a>
      </div>
    </div>
  </nav>
</header>

<script>
  // Client-side JavaScript for mobile menu toggle
  const navToggle = document.getElementById('nav-toggle');
  const navMobile = document.getElementById('nav-mobile');
  const navOverlay = document.getElementById('nav-overlay');
  const body = document.body;

  function toggleMenu() {
    if (!navToggle || !navMobile || !navOverlay) return;
    
    const isOpen = navToggle.classList.contains('nav-toggle--active');
    
    if (isOpen) {
      // Close menu
      navToggle.classList.remove('nav-toggle--active');
      navMobile.classList.remove('nav-mobile--active');
      navOverlay.classList.remove('nav-overlay--active');
      body.classList.remove('nav-open');
    } else {
      // Open menu
      navToggle.classList.add('nav-toggle--active');
      navMobile.classList.add('nav-mobile--active');
      navOverlay.classList.add('nav-overlay--active');
      body.classList.add('nav-open');
    }
  }

  // Toggle menu on button click
  if (navToggle) {
    navToggle.addEventListener('click', toggleMenu);
  }

  // Close menu on overlay click
  if (navOverlay) {
    navOverlay.addEventListener('click', toggleMenu);
  }

  // Close menu on mobile link click
  const mobileLinks = document.querySelectorAll('.nav-mobile-link');
  mobileLinks.forEach(link => {
    link.addEventListener('click', () => {
      if (navToggle && navToggle.classList.contains('nav-toggle--active')) {
        toggleMenu();
      }
    });
  });

  // Close menu on escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && navToggle && navToggle.classList.contains('nav-toggle--active')) {
      toggleMenu();
    }
  });
</script>
